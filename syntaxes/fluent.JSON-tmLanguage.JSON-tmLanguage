{
  "name": "Fluent",
  "scopeName": "source.ftl",
  "fileTypes": [
    "ftl"
  ],
  "patterns": [
    {
      "include": "#syntax"
    }
  ],
  "repository": {
    "syntax": {
      "name": "meta.syntax.ftl",
      "patterns": [
        {
          "include": "#placeable"
        },
        {
          "include": "#term"
        },
        {
          "include": "#message"
        },
        {
          "include": "#pattern"
        },
        {
          "include": "#comment-line"
        }
      ]
    },
    "comment-line": {
      "comment": "A comment is allowed anywhere outside a <terminal string>, <meta identifier>, <integer> or <special sequence>",
      "name": "comment.line.number-sign.ftl",
      "begin": "\\#",
      "end": "\\n"
    },
    "term": {
      "name": "meta.term.ftl",
      "match": "^(?:\\-)((?:[a-zA-Z])(?:[a-zA-Z0-9_-]*))(?:\\s*?)(\\={1})(?:\\s*?)((.*))",
      "captures": {
        "0": {
          "name": "variable.other.constant.ftl"
        },
        "2": {
          "name": "keyword.operator.assignment.ftl"
        },
        "3": {
          "name": "string.unqouted.ftl"
        }
      }
    },
    "identifier": {
      "name": "string.unqouted.ftl",
      "match": "((?:[a-zA-Z])(?:[a-zA-Z0-9_-]*))"
    },
    "variable": {
      "name": "entity.other.attribute-name.ftl",
      "match": "\\$((?:[a-zA-Z])(?:[a-zA-Z]*))"
    },
    "selector": {
      "name": "meta.selector.ftl",
      "match": "(:?\\[{1})((?:[a-zA-Z0-9])(?:[a-zA-Z0-9]*))(:?\\]{1})",
      "captures": {
        "2": {
          "name": "support.constant"
        }
      }
    },
    "function": {
      "name": "support.function.ftl",
      "match": "((?:[A-Z])(?:[A-Z]*))(\\({1})(.*)(\\){1})"
    },
    "arrow-operator": {
      "name": "storage.type.function.arrow.ftl",
      "match": "\\-\\>"
    },
    "placeable": {
      "name": "meta.placeable.ftl",
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.begin.ftl"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.end.ftl"
        }
      },
      "patterns": [
        {
          "include": "#variable"
        },
        {
          "include": "#function"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#selector"
        },
        {
          "include": "#arrow-operator"
        },
        {
          "include": "#placeable"
        }
      ]
    },
    "message": {
      "name": "meta.message.ftl",
      "match": "^((?:[a-zA-Z])(?:[a-zA-Z0-9_-]*))(?:\\s*?)(\\={1})(?:\\s*?)(.*)",
      "captures": {
        "1": {
          "name": "variable.other.ftl"
        },
        "2": {
          "name": "keyword.operator.assignment.ftl"
        },
        "3": {
          "name": "string.unqouted.ftl"
        }
      },
      "patterns": [
        {
          "include": "#placeable"
        },
        {
          "include": "#embed-html"
        }
      ]
    },
    "embed-html": {
      "name": "meta.embedded.block.html"
    },
    "pattern": {
      "name": "meta.pattern.ftl",
      "match": "^(:?\\ +)(:?\\.{1})((?:[a-zA-Z])(?:[a-zA-Z0-9_-]*))(?:\\s*?)(\\={1})(?:\\s*?)(.*)|(\\{\\})",
      "captures": {
        "2": {
          "name": "entity.other.attribute-name.ftl"
        },
        "3": {
          "name": "entity.other.attribute-name.ftl"
        },
        "4": {
          "name": "keyword.operator.assignment.ftl"
        },
        "5": {
          "name": "string.unqouted.ftl"
        }
      },
      "patterns": [
        {
          "include": "#placeable"
        },
        {
          "include": "#embed-html"
        }
      ]
    }
  }
}